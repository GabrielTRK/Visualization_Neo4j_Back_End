package com.VisNeo4j.App.Problems.Knapsack;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.VisNeo4j.App.Utils.Utils;

public class Knapsack01_L3 extends Knapsack01{

	double capacity = 101303.0;
	private List<Integer> weights = Stream.of(1604,844,1013,1165,708,694,677,1684,1796,1651,1737,1313,1261,831,1144,732,821,1565,1360,1581,1825,972,1783,1896,1601,747,984,610,726,614,1981,872,1135,1018,1538,1645,1931,1814,1760,1201,1859,781,1709,612,749,1066,727,778,891,748,684,682,845,1435,1126,892,1001,1343,990,1322,1091,518,1619,1058,1858,707,774,818,1007,1350,1514,744,1473,1916,875,1676,1197,1903,1832,1535,1109,1999,1449,891,1111,1098,1810,832,1669,1481,830,1451,1762,797,582,1866,506,736,1932,1173,1427,1177,1025,1922,650,1594,1913,1711,1493,710,1198,655,1594,584,1818,1115,690,557,1975,1800,1760,1867,953,1450,524,1992,1437,945,1676,1538,772,1917,1874,1660,1457,2000,1592,1634,1763,636,1781,537,561,933,1397,1249,1258,1974,1826,801,575,1614,1735,1842,1754,1176,1633,754,1123,1348,1198,1685,1500,1901,800,1009,1295,908,664,1264,1326,1217,1752,1853,1254,1078,996,1917,826,522,1866,558,1237,1952,1737,948,1645,846,1478,1296,662,1785,1157,1027,2000,1424,689,1175,1583,679).collect(Collectors.toList());
	private List<Integer> profits = Stream.of(159,43,187,50,139,33,119,149,25,176,88,64,76,18,184,28,69,179,114,53,16,73,138,136,27,23,97,151,165,118,68,142,77,162,30,104,155,53,72,10,114,71,96,94,75,16,87,130,176,64,73,110,141,58,192,41,154,57,157,15,86,138,148,47,35,39,127,136,157,137,192,81,99,42,146,91,66,179,162,198,69,157,112,43,95,168,147,159,191,29,179,141,162,46,133,123,156,169,196,198,191,132,173,10,31,176,56,129,61,157,144,117,173,115,64,91,180,50,62,172,21,21,134,93,111,134,196,65,73,167,174,83,138,173,87,67,156,165,59,71,193,141,158,182,178,20,25,179,49,80,131,43,160,148,18,163,134,166,88,40,115,49,31,11,100,192,168,87,22,179,70,71,140,97,60,61,88,97,46,84,54,194,191,136,188,35,167,112,82,197,139,75,120,194,26,146,51,14,71,77).collect(Collectors.toList());
	
	public Knapsack01_L3() {
		super();
		super.setWeights(Utils.convertToDouble(weights));
		super.setProfits(Utils.convertToDouble(profits));
		super.setCapacity(capacity);
		int var = this.weights.size();
		super.setNumVariables(var);
	}
}

package com.VisNeo4j.App.Problems.Knapsack;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.VisNeo4j.App.Utils.Utils;

public class Knapsack01_L6 extends Knapsack01{

	double capacity = 529901.0;
	private List<Integer> weights = Stream.of(1060,3022,3502,664,4824,1200,2741,561,2552,4346,4149,3377,870,4867,544,3550,3532,954,1112,1342,1955,2295,3173,3410,1093,4894,1717,2575,1334,814,2703,1237,848,3123,1557,1674,2588,3396,1164,3198,3999,2643,651,3363,4688,2188,2609,2232,2977,1228,1430,2229,728,2318,2598,3825,2449,2678,4597,713,3441,3108,2283,2859,3245,3926,1227,1713,1547,2770,1408,2077,698,2478,2699,2983,2627,2468,3085,1154,4435,1712,3338,1519,1906,3454,1594,3078,3301,2070,1920,1818,1543,4964,3439,2642,2794,4949,4358,2417,2655,4194,4710,639,2024,2614,4887,3400,2254,3182,2564,2339,2732,1308,3389,658,3863,3239,889,2117,4065,4462,4074,517,3902,668,3205,2043,3428,1580,3116,1830,2418,4350,3267,3200,3795,3495,3221,1974,2749,2646,2815,2546,1738,1982,3895,1244,2436,3185,1129,1735,4418,3898,3313,2267,3417,3838,2923,1150,3669,4723,2273,2058,3897,1922,2746,4991,2335,526,684,620,4324,2534,977,3267,3759,540,3962,2760,1325,2604,1867,4345,590,1921,3602,2886,581,1638,1070,3053,3774,1368,810,4394,666,976,3988,4237,1484,4366,4557,3607,4012,2410,4026,1516,2341,3476,566,4972,3374,4232,1405,3421,1429,859,3565,4833,1708,4169,4387,1709,640,678,1178,4565,4646,3639,4482,2573,908,2642,4678,4934,4904,4370,2145,1429,3901,2675,1669,3079,1166,3119,2035,2285,3465,2328,1925,883,1153,4841,1870,4107,2567,2054,738,1635,4203,676,4786,4265,4469,3773,3927,4596,579,2389,510,4499,827,2402,4739,2354,530,3261,4257,1814,1180,1517,3940,3327,2936,2135,3975,1594,3899,1438,5000,2238,1931,1900,1519,1213,696,2560,2951,1908,2278,1246,3336,3993,1175,656,1479,4686,3377,508,4862,3606,1039,2226,2735,1813,1817,3941,4802,4472,1798,922,1611,3812,4992,1970,4660,3586,4447,2872,586,3925,3935,3410,4948,1465,4980,4464,3271,2016,1290,3082,1894,4653,2180,2138,3871,2893,1834,1251,4746,1003,1179,2424,4482,4030,501,1536,4230,4966,2722,1038,4871,1282,2830,2987,3306,3185,2216,3827,3222,2765,4018,3757,1715,3901,1611,3929,2247,2472,1447,3741,4612,2484,1400,2434,2875,2070,4800,1626,2268,790,3510,2191,866,3420,1576,1146,4932,3010,1403,3238,3840,1295,2658,2666,4999,2278,4626,3934,3209,3377,527,2343,4176,1279,3923,2768,3263,1495,2514,2637,2846,1628,2042,638,2025,4551,1113,3596,4572,2093,3458,2554,880,2926,1141,4345,889,4640,780,3156,2832,3432,678,1870,4487,994,1525,4321,714,2830,2800,761,906,1191,4105,2578,1159,2367,2067,3046,2739,3845,1131,4298,1233,1989,3962,3741,3974,4527,509,3959,1055,851,1296,4116,1364,1004,1063,1315,1868,3686,3872,1476,2893,2252,4872,3141,2274,2403,2097,3700,1581,4999,3838,819,4476,948).collect(Collectors.toList());
	private List<Integer> profits = Stream.of(156,110,259,293,249,133,400,249,481,191,165,346,164,111,89,361,495,224,24,158,414,336,42,112,51,453,120,388,197,193,44,172,81,245,236,272,22,386,80,64,266,264,362,74,464,257,234,455,328,264,483,36,42,201,66,463,60,299,252,422,57,20,411,192,113,241,500,293,198,142,24,86,498,344,217,397,332,254,263,248,50,238,405,430,56,426,481,405,192,112,186,205,465,350,19,228,311,286,458,298,405,494,452,349,36,381,259,168,371,467,165,132,367,353,239,264,119,429,439,211,227,429,221,290,59,391,463,165,441,476,293,480,202,190,494,314,378,327,210,208,136,410,377,469,349,346,499,469,91,173,73,81,239,346,253,105,72,36,372,169,28,462,35,299,412,172,216,125,93,177,411,342,57,264,143,273,433,26,330,394,316,133,118,104,342,91,25,257,458,19,13,207,186,367,274,355,340,327,346,147,360,254,184,394,465,367,458,354,248,187,350,443,27,194,278,147,350,234,96,174,486,175,355,207,262,165,450,379,295,58,48,337,70,103,284,277,77,462,131,114,296,461,354,212,413,50,88,286,472,65,221,415,313,217,17,165,437,72,380,367,247,27,222,72,17,23,192,38,426,414,145,321,454,236,210,333,394,498,362,246,489,318,68,98,25,10,169,35,153,424,112,179,150,456,105,158,446,309,228,426,389,499,66,136,271,243,162,14,373,249,75,184,306,162,179,306,88,286,96,148,407,423,463,78,244,219,177,438,65,150,78,226,249,339,128,240,20,118,269,164,345,53,456,204,427,95,394,192,79,164,202,399,392,144,330,82,76,19,22,292,263,129,132,278,306,30,433,210,253,26,231,47,448,389,21,481,153,342,179,403,396,151,133,167,117,315,110,476,75,236,310,327,32,94,476,430,327,425,134,231,103,435,455,356,222,469,238,148,493,302,61,13,326,180,491,385,234,303,259,448,91,300,397,19,282,58,147,172,30,325,352,305,405,374,187,311,64,104,176,218,126,156,286,208,353,416,117,408,94,219,212,240,362,450,155,272,450,167,34,282,394,181,59,469,208,28,243,13,80,36,157,194,429,262,435,79,148,44,68,242,163,498,294,499,220,76,337,130,49,418,142,242,109,500,206,124,85,259,96,264).collect(Collectors.toList());
	
	public Knapsack01_L6() {
		super();
		super.setWeights(Utils.convertToDouble(weights));
		super.setProfits(Utils.convertToDouble(profits));
		super.setCapacity(capacity);
		int var = this.weights.size();
		super.setNumVariables(var);
	}
}

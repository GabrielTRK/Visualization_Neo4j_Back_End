package com.VisNeo4j.App.Problems.Knapsack;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.VisNeo4j.App.Utils.Utils;

public class Knapsack01_kp_ss_500 extends Knapsack01{

	double capacity = 2518.0;
	private List<Integer> weights = Stream.of(89, 83, 1, 36, 39, 53, 76, 9, 41, 15, 27, 26, 62, 3, 97, 45, 38, 24, 51, 72, 45, 56, 8, 8, 21, 96, 77, 91, 90, 72, 54, 93, 86, 83, 21, 39, 54, 72, 91, 31, 90, 23, 49, 40, 77, 41, 48, 93, 6, 94, 77, 32, 39, 5, 29, 45, 39, 87, 60, 6, 67, 54, 93, 45, 17, 69, 10, 32, 21, 1, 6, 86, 1, 78, 98, 32, 41, 52, 44, 41, 48, 9, 67, 83, 23, 71, 83, 100, 52, 32, 92, 24, 7, 14, 3, 54, 88, 62, 17, 67, 20, 56, 89, 12, 70, 100, 49, 14, 90, 41, 85, 23, 94, 16, 52, 13, 13, 29, 15, 60, 90, 41, 88, 71, 45, 43, 52, 31, 57, 12, 1, 86, 26, 62, 76, 19, 49, 94, 67, 15, 87, 46, 59, 60, 95, 30, 28, 71, 13, 28, 42, 27, 88, 7, 16, 10, 70, 65, 60, 53, 27, 12, 3, 51, 52, 95, 91, 83, 99, 82, 63, 30, 17, 39, 49, 16, 91, 9, 100, 76, 82, 67, 46, 63, 62, 43, 49, 66, 5, 41, 82, 92, 74, 38, 54, 29, 5, 86, 61, 38, 94, 86, 25, 59, 79, 48, 61, 51, 38, 44, 75, 72, 68, 63, 48, 70, 28, 59, 98, 86, 12, 79, 36, 51, 42, 43, 90, 81, 2, 67, 32, 26, 8, 96, 54, 98, 70, 3, 78, 52, 29, 31, 2, 16, 13, 43, 32, 16, 54, 77, 64, 86, 53, 66, 53, 43, 36, 25, 24, 38, 79, 4, 66, 84, 20, 41, 97, 44, 90, 19, 51, 5, 66, 22, 92, 35, 79, 4, 73, 55, 76, 79, 70, 98, 56, 95, 36, 53, 42, 53, 27, 20, 59, 14, 92, 88, 38, 54, 23, 48, 98, 18, 54, 76, 3, 5, 41, 97, 71, 82, 77, 49, 79, 67, 16, 90, 71, 69, 90, 58, 74, 64, 96, 83, 91, 7, 11, 54, 98, 22, 63, 62, 4, 72, 65, 97, 7, 47, 38, 34, 68, 64, 31, 79, 34, 47, 95, 7, 80, 56, 60, 85, 51, 56, 98, 63, 19, 19, 73, 26, 32, 4, 10, 7, 85, 74, 33, 22, 10, 86, 14, 71, 79, 22, 90, 53, 85, 1, 90, 12, 11, 10, 76, 5, 73, 83, 5, 65, 26, 41, 75, 19, 57, 22, 39, 25, 8, 20, 14, 13, 84, 69, 42, 35, 48, 73, 12, 19, 64, 79, 6, 14, 89, 96, 27, 89, 52, 11, 86, 16, 33, 50, 73, 78, 36, 10, 10, 58, 71, 85, 32, 20, 89, 8, 57, 46, 14, 85, 99, 64, 43, 43, 42, 40, 58, 41, 89, 38, 49, 46, 93, 37, 40, 5, 70, 51, 60, 50, 72, 6, 42, 41, 67, 64, 54, 15, 47, 45, 38, 97, 93, 2, 14, 76, 74, 42, 14, 27, 14, 28, 26, 18, 28, 86, 30, 75, 32, 57, 59, 73, 92, 99, 35, 49, 75, 96, 33, 62, 17, 43).collect(Collectors.toList());
	private List<Integer> profits = Stream.of(89, 83, 1, 36, 39, 53, 76, 9, 41, 15, 27, 26, 62, 3, 97, 45, 38, 24, 51, 72, 45, 56, 8, 8, 21, 96, 77, 91, 90, 72, 54, 93, 86, 83, 21, 39, 54, 72, 91, 31, 90, 23, 49, 40, 77, 41, 48, 93, 6, 94, 77, 32, 39, 5, 29, 45, 39, 87, 60, 6, 67, 54, 93, 45, 17, 69, 10, 32, 21, 1, 6, 86, 1, 78, 98, 32, 41, 52, 44, 41, 48, 9, 67, 83, 23, 71, 83, 100, 52, 32, 92, 24, 7, 14, 3, 54, 88, 62, 17, 67, 20, 56, 89, 12, 70, 100, 49, 14, 90, 41, 85, 23, 94, 16, 52, 13, 13, 29, 15, 60, 90, 41, 88, 71, 45, 43, 52, 31, 57, 12, 1, 86, 26, 62, 76, 19, 49, 94, 67, 15, 87, 46, 59, 60, 95, 30, 28, 71, 13, 28, 42, 27, 88, 7, 16, 10, 70, 65, 60, 53, 27, 12, 3, 51, 52, 95, 91, 83, 99, 82, 63, 30, 17, 39, 49, 16, 91, 9, 100, 76, 82, 67, 46, 63, 62, 43, 49, 66, 5, 41, 82, 92, 74, 38, 54, 29, 5, 86, 61, 38, 94, 86, 25, 59, 79, 48, 61, 51, 38, 44, 75, 72, 68, 63, 48, 70, 28, 59, 98, 86, 12, 79, 36, 51, 42, 43, 90, 81, 2, 67, 32, 26, 8, 96, 54, 98, 70, 3, 78, 52, 29, 31, 2, 16, 13, 43, 32, 16, 54, 77, 64, 86, 53, 66, 53, 43, 36, 25, 24, 38, 79, 4, 66, 84, 20, 41, 97, 44, 90, 19, 51, 5, 66, 22, 92, 35, 79, 4, 73, 55, 76, 79, 70, 98, 56, 95, 36, 53, 42, 53, 27, 20, 59, 14, 92, 88, 38, 54, 23, 48, 98, 18, 54, 76, 3, 5, 41, 97, 71, 82, 77, 49, 79, 67, 16, 90, 71, 69, 90, 58, 74, 64, 96, 83, 91, 7, 11, 54, 98, 22, 63, 62, 4, 72, 65, 97, 7, 47, 38, 34, 68, 64, 31, 79, 34, 47, 95, 7, 80, 56, 60, 85, 51, 56, 98, 63, 19, 19, 73, 26, 32, 4, 10, 7, 85, 74, 33, 22, 10, 86, 14, 71, 79, 22, 90, 53, 85, 1, 90, 12, 11, 10, 76, 5, 73, 83, 5, 65, 26, 41, 75, 19, 57, 22, 39, 25, 8, 20, 14, 13, 84, 69, 42, 35, 48, 73, 12, 19, 64, 79, 6, 14, 89, 96, 27, 89, 52, 11, 86, 16, 33, 50, 73, 78, 36, 10, 10, 58, 71, 85, 32, 20, 89, 8, 57, 46, 14, 85, 99, 64, 43, 43, 42, 40, 58, 41, 89, 38, 49, 46, 93, 37, 40, 5, 70, 51, 60, 50, 72, 6, 42, 41, 67, 64, 54, 15, 47, 45, 38, 97, 93, 2, 14, 76, 74, 42, 14, 27, 14, 28, 26, 18, 28, 86, 30, 75, 32, 57, 59, 73, 92, 99, 35, 49, 75, 96, 33, 62, 17, 43).collect(Collectors.toList());
	
	public Knapsack01_kp_ss_500() {
		super();
		super.setWeights(Utils.convertToDouble(weights));
		super.setProfits(Utils.convertToDouble(profits));
		super.setCapacity(capacity);
		int var = this.weights.size();
		super.setNumVariables(var);
	}
}

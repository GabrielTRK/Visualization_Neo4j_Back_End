package com.VisNeo4j.App.Problemas.Knapsack;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.VisNeo4j.App.Utils.Utils;

public class Knapsack01_kp_uc_500 extends Knapsack01{

	double capacity = 2583.0;
	private List<Integer> weights = Stream.of(89, 1, 39, 76, 41, 27, 62, 97, 38, 51, 45, 8, 21, 77, 90, 54, 86, 21, 54, 91, 90, 49, 77, 48, 6, 77, 39, 29, 39, 60, 67, 93, 17, 10, 21, 6, 1, 98, 41, 44, 48, 67, 23, 83, 52, 92, 7, 3, 88, 17, 20, 89, 70, 49, 90, 85, 94, 52, 13, 15, 90, 88, 45, 52, 57, 1, 26, 76, 49, 67, 87, 59, 95, 28, 13, 42, 88, 16, 70, 60, 27, 3, 52, 91, 99, 63, 17, 49, 91, 100, 82, 46, 62, 49, 5, 82, 74, 54, 5, 61, 94, 25, 79, 61, 38, 75, 68, 48, 28, 98, 12, 36, 42, 90, 2, 32, 8, 54, 70, 78, 29, 2, 13, 32, 54, 64, 53, 53, 36, 24, 79, 66, 20, 97, 90, 51, 66, 92, 79, 73, 76, 70, 56, 36, 42, 27, 59, 92, 38, 23, 98, 54, 3, 41, 71, 77, 79, 16, 71, 90, 74, 96, 91, 11, 98, 63, 4, 65, 7, 38, 68, 31, 34, 95, 80, 60, 51, 98, 19, 73, 32, 10, 85, 33, 10, 14, 79, 90, 85, 90, 11, 76, 73, 5, 26, 75, 57, 39, 8, 14, 84, 42, 48, 12, 64, 6, 89, 27, 52, 86, 33, 73, 36, 10, 71, 32, 89, 57, 14, 99, 43, 42, 58, 89, 49, 93, 40, 70, 60, 72, 42, 67, 54, 47, 38, 93, 14, 74, 14, 14, 26, 28, 30, 32, 59, 92, 35, 75, 33, 17, 8, 88, 62, 39, 44, 86, 93, 85, 44, 98, 60, 58, 60, 24, 44, 43, 99, 89, 6, 36, 53, 92, 65, 64, 78, 83, 56, 99, 34, 9, 18, 71, 12, 40, 97, 22, 92, 62, 98, 24, 19, 1, 1, 3, 4, 8, 3, 23, 27, 89, 77, 16, 95, 50, 28, 65, 20, 82, 17, 96, 67, 31, 71, 67, 19, 95, 38, 70, 3, 10, 75, 32, 29, 43, 38, 4, 87, 32, 71, 98, 57, 44, 50, 89, 95, 4, 88, 4, 81, 57, 58, 87, 79, 69, 37, 56, 53, 23, 94, 84, 69, 53, 97, 5, 93, 94, 72, 12, 100, 55, 7, 82, 42, 59, 51, 40, 66, 33, 60, 12, 17, 91, 57, 83, 57, 34, 28, 23, 25, 54, 4, 72, 45, 32, 92, 64, 40, 75, 3, 21, 72, 22, 28, 19, 77, 26, 97, 81, 23, 34, 29, 26, 47, 36, 3, 5, 63, 87, 39, 91, 88, 20, 2, 10, 84, 63, 56, 65, 97, 77, 70, 96, 38, 1, 61, 10, 47, 25, 95, 95, 64, 75, 91, 66, 84, 70, 11, 29, 95, 60, 47, 21, 69, 23, 96, 13, 26, 90, 40, 72, 74, 18, 42, 12, 35, 43, 68, 47, 80, 35, 54, 31, 30, 63, 13, 3, 83, 87, 7, 50, 1, 40, 99, 93, 61, 92, 12, 5, 62, 36, 72, 56, 76, 99, 86, 94, 47, 1, 6, 30, 28, 76, 6, 68, 56, 87, 4, 78, 1, 19).collect(Collectors.toList());
	private List<Integer> profits = Stream.of(83, 36, 53, 9, 15, 26, 3, 45, 24, 72, 56, 8, 96, 91, 72, 93, 83, 39, 72, 31, 23, 40, 41, 93, 94, 32, 5, 45, 87, 6, 54, 45, 69, 32, 1, 86, 78, 32, 52, 41, 9, 83, 71, 100, 32, 24, 14, 54, 62, 67, 56, 12, 100, 14, 41, 23, 16, 13, 29, 60, 41, 71, 43, 31, 12, 86, 62, 19, 94, 15, 46, 60, 30, 71, 28, 27, 7, 10, 65, 53, 12, 51, 95, 83, 82, 30, 39, 16, 9, 76, 67, 63, 43, 66, 41, 92, 38, 29, 86, 38, 86, 59, 48, 51, 44, 72, 63, 70, 59, 86, 79, 51, 43, 81, 67, 26, 96, 98, 3, 52, 31, 16, 43, 16, 77, 86, 66, 43, 25, 38, 4, 84, 41, 44, 19, 5, 22, 35, 4, 55, 79, 98, 95, 53, 53, 20, 14, 88, 54, 48, 18, 76, 5, 97, 82, 49, 67, 90, 69, 58, 64, 83, 7, 54, 22, 62, 72, 97, 47, 34, 64, 79, 47, 7, 56, 85, 56, 63, 19, 26, 4, 7, 74, 22, 86, 71, 22, 53, 1, 12, 10, 5, 83, 65, 41, 19, 22, 25, 20, 13, 69, 35, 73, 19, 79, 14, 96, 89, 11, 16, 50, 78, 10, 58, 85, 20, 8, 46, 85, 64, 43, 40, 41, 38, 46, 37, 5, 51, 50, 6, 41, 64, 15, 45, 97, 2, 76, 42, 27, 28, 18, 86, 75, 57, 73, 99, 49, 96, 62, 43, 21, 43, 37, 8, 14, 74, 89, 41, 16, 10, 22, 31, 61, 91, 26, 88, 39, 12, 96, 42, 55, 10, 73, 26, 31, 36, 95, 30, 4, 52, 89, 28, 100, 32, 44, 61, 41, 2, 4, 83, 88, 96, 7, 42, 91, 96, 96, 36, 38, 32, 41, 100, 41, 59, 97, 50, 8, 6, 74, 73, 1, 47, 11, 51, 25, 5, 10, 8, 19, 32, 95, 82, 70, 61, 4, 14, 83, 88, 26, 17, 92, 25, 89, 63, 90, 67, 8, 64, 39, 99, 80, 49, 32, 37, 14, 54, 8, 44, 37, 63, 18, 90, 83, 70, 51, 86, 4, 39, 97, 84, 97, 7, 40, 92, 10, 72, 40, 46, 24, 90, 69, 71, 51, 23, 97, 94, 52, 31, 57, 31, 32, 84, 84, 79, 99, 23, 70, 73, 53, 21, 81, 15, 40, 23, 99, 86, 83, 13, 73, 49, 19, 86, 21, 94, 66, 93, 89, 74, 99, 65, 77, 37, 87, 78, 4, 3, 46, 22, 51, 44, 82, 36, 59, 64, 86, 83, 71, 56, 72, 31, 32, 42, 43, 91, 75, 12, 81, 13, 90, 97, 34, 56, 26, 38, 18, 69, 22, 14, 42, 73, 37, 98, 39, 52, 40, 5, 21, 37, 62, 60, 29, 47, 5, 15, 99, 61, 23, 69, 29, 26, 37, 100, 9, 41, 42, 86, 57, 25, 94, 93, 34, 42, 43, 51, 61, 14, 79, 97, 48, 36, 18, 52, 91, 4, 20, 71, 3, 52, 73, 34).collect(Collectors.toList());
	
	public Knapsack01_kp_uc_500() {
		super();
		super.setWeights(Utils.convertToDouble(weights));
		super.setProfits(Utils.convertToDouble(profits));
		super.setCapacity(capacity);
		int var = this.weights.size();
		super.setNumVariables(var);
	}
}

package com.VisNeo4j.App.Problemas.Knapsack;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.VisNeo4j.App.Utils.Utils;

public class Knapsack01_kp_uc_1000 extends Knapsack01{

	double capacity = 5121.0;
	private List<Integer> weights = Stream.of(89, 1, 39, 76, 41, 27, 62, 97, 38, 51, 45, 8, 21, 77, 90, 54, 86, 21, 54, 91, 90, 49, 77, 48, 6, 77, 39, 29, 39, 60, 67, 93, 17, 10, 21, 6, 1, 98, 41, 44, 48, 67, 23, 83, 52, 92, 7, 3, 88, 17, 20, 89, 70, 49, 90, 85, 94, 52, 13, 15, 90, 88, 45, 52, 57, 1, 26, 76, 49, 67, 87, 59, 95, 28, 13, 42, 88, 16, 70, 60, 27, 3, 52, 91, 99, 63, 17, 49, 91, 100, 82, 46, 62, 49, 5, 82, 74, 54, 5, 61, 94, 25, 79, 61, 38, 75, 68, 48, 28, 98, 12, 36, 42, 90, 2, 32, 8, 54, 70, 78, 29, 2, 13, 32, 54, 64, 53, 53, 36, 24, 79, 66, 20, 97, 90, 51, 66, 92, 79, 73, 76, 70, 56, 36, 42, 27, 59, 92, 38, 23, 98, 54, 3, 41, 71, 77, 79, 16, 71, 90, 74, 96, 91, 11, 98, 63, 4, 65, 7, 38, 68, 31, 34, 95, 80, 60, 51, 98, 19, 73, 32, 10, 85, 33, 10, 14, 79, 90, 85, 90, 11, 76, 73, 5, 26, 75, 57, 39, 8, 14, 84, 42, 48, 12, 64, 6, 89, 27, 52, 86, 33, 73, 36, 10, 71, 32, 89, 57, 14, 99, 43, 42, 58, 89, 49, 93, 40, 70, 60, 72, 42, 67, 54, 47, 38, 93, 14, 74, 14, 14, 26, 28, 30, 32, 59, 92, 35, 75, 33, 17, 8, 88, 62, 39, 44, 86, 93, 85, 44, 98, 60, 58, 60, 24, 44, 43, 99, 89, 6, 36, 53, 92, 65, 64, 78, 83, 56, 99, 34, 9, 18, 71, 12, 40, 97, 22, 92, 62, 98, 24, 19, 1, 1, 3, 4, 8, 3, 23, 27, 89, 77, 16, 95, 50, 28, 65, 20, 82, 17, 96, 67, 31, 71, 67, 19, 95, 38, 70, 3, 10, 75, 32, 29, 43, 38, 4, 87, 32, 71, 98, 57, 44, 50, 89, 95, 4, 88, 4, 81, 57, 58, 87, 79, 69, 37, 56, 53, 23, 94, 84, 69, 53, 97, 5, 93, 94, 72, 12, 100, 55, 7, 82, 42, 59, 51, 40, 66, 33, 60, 12, 17, 91, 57, 83, 57, 34, 28, 23, 25, 54, 4, 72, 45, 32, 92, 64, 40, 75, 3, 21, 72, 22, 28, 19, 77, 26, 97, 81, 23, 34, 29, 26, 47, 36, 3, 5, 63, 87, 39, 91, 88, 20, 2, 10, 84, 63, 56, 65, 97, 77, 70, 96, 38, 1, 61, 10, 47, 25, 95, 95, 64, 75, 91, 66, 84, 70, 11, 29, 95, 60, 47, 21, 69, 23, 96, 13, 26, 90, 40, 72, 74, 18, 42, 12, 35, 43, 68, 47, 80, 35, 54, 31, 30, 63, 13, 3, 83, 87, 7, 50, 1, 40, 99, 93, 61, 92, 12, 5, 62, 36, 72, 56, 76, 99, 86, 94, 47, 1, 6, 30, 28, 76, 6, 68, 56, 87, 4, 78, 1, 19, 100, 9, 62, 76, 24, 38, 64, 74, 48, 76, 13, 65, 17, 81, 6, 87, 19, 78, 14, 11, 46, 70, 85, 73, 94, 39, 24, 11, 40, 26, 26, 75, 5, 38, 38, 87, 6, 81, 5, 79, 92, 19, 46, 67, 87, 33, 14, 83, 17, 23, 63, 80, 42, 28, 42, 82, 71, 12, 71, 30, 60, 80, 49, 71, 39, 8, 68, 90, 64, 14, 65, 84, 53, 21, 90, 88, 70, 82, 16, 43, 31, 14, 90, 53, 26, 95, 37, 83, 12, 46, 72, 44, 29, 76, 27, 34, 10, 91, 45, 81, 7, 100, 59, 56, 51, 16, 77, 40, 57, 76, 69, 66, 26, 39, 13, 69, 24, 12, 35, 23, 34, 54, 28, 47, 98, 14, 35, 34, 45, 49, 37, 39, 83, 76, 5, 84, 74, 57, 26, 68, 5, 92, 73, 41, 70, 5, 78, 1, 41, 19, 100, 43, 85, 16, 70, 65, 92, 97, 91, 40, 9, 52, 39, 93, 15, 37, 12, 72, 93, 43, 22, 24, 93, 98, 60, 3, 46, 61, 41, 49, 32, 95, 91, 42, 96, 79, 24, 70, 99, 77, 36, 39, 97, 56, 28, 38, 20, 4, 83, 51, 96, 63, 12, 7, 98, 30, 73, 14, 75, 74, 3, 40, 99, 97, 25, 21, 32, 96, 87, 4, 34, 8, 45, 64, 87, 98, 75, 31, 69, 93, 80, 46, 76, 5, 17, 19, 84, 79, 88, 47, 92, 37, 56, 55, 79, 8, 45, 88, 29, 94, 18, 8, 46, 67, 24, 38, 96, 34, 81, 80, 44, 51, 92, 56, 37, 60, 97, 29, 98, 90, 11, 81, 98, 14, 95, 54, 83, 65, 100, 14, 66, 42, 39, 25, 11, 37, 89, 75, 23, 72, 22, 17, 50, 7, 38, 10, 67, 29, 43, 51, 41, 26, 80, 14, 65, 72, 98, 68, 56, 24, 90, 64, 28, 48, 7, 49, 72, 44, 50, 48, 18, 27, 98, 17, 66, 21, 51, 60, 9, 79, 17, 37, 36, 100, 27, 82, 56, 8, 54, 62, 78, 12, 70, 38, 6, 91, 29, 61, 42, 77, 13, 24, 53, 92, 55, 40, 73, 20, 10, 61, 8, 40, 60, 23, 20, 51, 66, 7, 60, 46, 25, 51, 4, 22, 81, 19, 73, 52, 14, 48, 28, 95, 30, 93, 22, 50, 16, 23, 86, 77, 45, 2, 15, 29, 74, 100, 37, 5, 26, 30, 37, 97, 47, 28, 3, 42, 22, 36, 81, 23, 22, 15, 11, 67, 38, 92, 26, 30, 75, 50, 7, 3, 97, 51, 59, 77, 91, 93, 14, 35, 14, 30, 78, 78, 8, 61, 63, 67, 98, 92, 90, 3, 24, 78, 87, 13, 25, 51, 60, 100, 49, 77, 17, 19, 97, 59, 20, 74, 79, 1, 72, 84, 72, 1, 16, 48, 87, 45, 47, 54, 77, 60, 94, 41, 37, 100, 27, 56, 98, 42, 62, 31, 54, 59, 76, 69, 7, 83, 73, 16, 49, 93, 75, 54, 65, 76, 26, 52, 97, 29).collect(Collectors.toList());
	private List<Integer> profits = Stream.of(83, 36, 53, 9, 15, 26, 3, 45, 24, 72, 56, 8, 96, 91, 72, 93, 83, 39, 72, 31, 23, 40, 41, 93, 94, 32, 5, 45, 87, 6, 54, 45, 69, 32, 1, 86, 78, 32, 52, 41, 9, 83, 71, 100, 32, 24, 14, 54, 62, 67, 56, 12, 100, 14, 41, 23, 16, 13, 29, 60, 41, 71, 43, 31, 12, 86, 62, 19, 94, 15, 46, 60, 30, 71, 28, 27, 7, 10, 65, 53, 12, 51, 95, 83, 82, 30, 39, 16, 9, 76, 67, 63, 43, 66, 41, 92, 38, 29, 86, 38, 86, 59, 48, 51, 44, 72, 63, 70, 59, 86, 79, 51, 43, 81, 67, 26, 96, 98, 3, 52, 31, 16, 43, 16, 77, 86, 66, 43, 25, 38, 4, 84, 41, 44, 19, 5, 22, 35, 4, 55, 79, 98, 95, 53, 53, 20, 14, 88, 54, 48, 18, 76, 5, 97, 82, 49, 67, 90, 69, 58, 64, 83, 7, 54, 22, 62, 72, 97, 47, 34, 64, 79, 47, 7, 56, 85, 56, 63, 19, 26, 4, 7, 74, 22, 86, 71, 22, 53, 1, 12, 10, 5, 83, 65, 41, 19, 22, 25, 20, 13, 69, 35, 73, 19, 79, 14, 96, 89, 11, 16, 50, 78, 10, 58, 85, 20, 8, 46, 85, 64, 43, 40, 41, 38, 46, 37, 5, 51, 50, 6, 41, 64, 15, 45, 97, 2, 76, 42, 27, 28, 18, 86, 75, 57, 73, 99, 49, 96, 62, 43, 21, 43, 37, 8, 14, 74, 89, 41, 16, 10, 22, 31, 61, 91, 26, 88, 39, 12, 96, 42, 55, 10, 73, 26, 31, 36, 95, 30, 4, 52, 89, 28, 100, 32, 44, 61, 41, 2, 4, 83, 88, 96, 7, 42, 91, 96, 96, 36, 38, 32, 41, 100, 41, 59, 97, 50, 8, 6, 74, 73, 1, 47, 11, 51, 25, 5, 10, 8, 19, 32, 95, 82, 70, 61, 4, 14, 83, 88, 26, 17, 92, 25, 89, 63, 90, 67, 8, 64, 39, 99, 80, 49, 32, 37, 14, 54, 8, 44, 37, 63, 18, 90, 83, 70, 51, 86, 4, 39, 97, 84, 97, 7, 40, 92, 10, 72, 40, 46, 24, 90, 69, 71, 51, 23, 97, 94, 52, 31, 57, 31, 32, 84, 84, 79, 99, 23, 70, 73, 53, 21, 81, 15, 40, 23, 99, 86, 83, 13, 73, 49, 19, 86, 21, 94, 66, 93, 89, 74, 99, 65, 77, 37, 87, 78, 4, 3, 46, 22, 51, 44, 82, 36, 59, 64, 86, 83, 71, 56, 72, 31, 32, 42, 43, 91, 75, 12, 81, 13, 90, 97, 34, 56, 26, 38, 18, 69, 22, 14, 42, 73, 37, 98, 39, 52, 40, 5, 21, 37, 62, 60, 29, 47, 5, 15, 99, 61, 23, 69, 29, 26, 37, 100, 9, 41, 42, 86, 57, 25, 94, 93, 34, 42, 43, 51, 61, 14, 79, 97, 48, 36, 18, 52, 91, 4, 20, 71, 3, 52, 73, 34, 68, 88, 87, 90, 72, 94, 31, 45, 29, 58, 72, 82, 22, 91, 74, 63, 58, 32, 55, 17, 67, 48, 61, 71, 52, 58, 49, 98, 76, 72, 17, 45, 75, 83, 7, 18, 55, 69, 71, 44, 8, 73, 28, 95, 11, 90, 47, 94, 36, 52, 74, 15, 75, 97, 90, 93, 98, 89, 33, 12, 24, 49, 76, 76, 99, 31, 21, 66, 66, 76, 9, 25, 76, 84, 27, 10, 39, 86, 87, 16, 37, 65, 11, 72, 58, 55, 17, 2, 47, 81, 6, 29, 16, 96, 76, 94, 43, 69, 21, 89, 6, 53, 5, 30, 52, 53, 11, 21, 68, 87, 76, 94, 91, 99, 74, 97, 26, 14, 26, 66, 57, 58, 46, 45, 37, 55, 83, 3, 38, 35, 87, 27, 90, 7, 99, 30, 20, 75, 58, 47, 88, 45, 68, 66, 37, 58, 51, 93, 69, 91, 29, 81, 43, 24, 80, 85, 82, 52, 48, 83, 54, 79, 27, 77, 81, 78, 28, 68, 100, 82, 87, 4, 77, 80, 18, 6, 39, 34, 31, 79, 25, 28, 74, 76, 9, 84, 56, 44, 90, 50, 10, 46, 43, 67, 18, 21, 45, 86, 70, 38, 28, 18, 42, 48, 78, 37, 70, 73, 1, 79, 16, 93, 17, 79, 50, 25, 43, 12, 70, 73, 71, 81, 35, 13, 19, 65, 18, 80, 5, 27, 39, 32, 20, 15, 75, 75, 39, 66, 8, 50, 35, 82, 96, 78, 21, 27, 80, 82, 22, 46, 66, 50, 100, 29, 71, 86, 43, 76, 97, 71, 69, 58, 49, 96, 72, 29, 46, 74, 16, 29, 28, 80, 62, 21, 14, 63, 57, 48, 3, 70, 32, 21, 88, 26, 30, 42, 72, 55, 76, 44, 62, 73, 61, 97, 86, 19, 89, 61, 87, 63, 37, 41, 6, 8, 60, 22, 61, 30, 74, 62, 45, 85, 47, 97, 4, 77, 55, 77, 87, 46, 20, 66, 9, 22, 78, 94, 1, 50, 25, 9, 87, 68, 75, 2, 43, 7, 87, 72, 91, 12, 50, 53, 69, 67, 73, 22, 87, 83, 100, 92, 49, 97, 9, 68, 78, 98, 38, 7, 42, 59, 82, 59, 12, 28, 40, 72, 21, 49, 46, 11, 71, 38, 71, 13, 19, 20, 12, 76, 7, 93, 14, 77, 84, 83, 34, 47, 89, 85, 71, 42, 97, 36, 23, 65, 24, 3, 30, 67, 6, 95, 85, 71, 74, 6, 47, 31, 8, 16, 67, 11, 90, 37, 72, 46, 38, 20, 91, 28, 62, 47, 40, 14, 78, 36, 92, 73, 34, 53, 48, 63, 41, 40, 52, 40, 6, 58, 16, 53, 70, 92, 86, 24, 87, 9, 57, 21, 6, 21, 40, 66, 25, 12, 40, 99, 50, 79, 57, 70, 30, 70, 21, 73, 22, 83, 3, 78, 76, 13, 97, 17, 38, 14, 97, 69, 10, 63, 31, 85, 28, 4, 29, 85, 15, 13, 73, 30, 39, 37, 62, 76, 16, 30, 99, 67, 61, 58, 38, 53, 53, 83).collect(Collectors.toList());
	
	public Knapsack01_kp_uc_1000() {
		super();
		super.setWeights(Utils.convertToDouble(weights));
		super.setProfits(Utils.convertToDouble(profits));
		super.setCapacity(capacity);
		int var = this.weights.size();
		super.setNumVariables(var);
	}
}

package com.VisNeo4j.App.Problemas.Knapsack;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.VisNeo4j.App.Utils.Utils;

public class Knapsack01_L8 extends Knapsack01{

	double capacity = 1051158.0;
	private List<Integer> weights = Stream.of(4134,6052,2761,3399,852,1651,4808,2650,6341,1268,6925,4010,5095,6997,2371,3194,3521,5466,5819,1151,1657,2837,868,3892,2683,1642,1858,6384,4890,3545,6429,1176,5346,5286,4152,1697,4382,2449,1371,1882,6318,964,2076,849,3371,586,6332,1778,1107,2498,3464,1160,6971,2658,2433,903,2438,801,3785,5450,4602,1084,1025,5552,6384,3970,1209,5868,2697,2411,5351,567,814,4842,4423,3920,5243,5097,5579,2372,5002,4118,3077,900,5571,2694,4451,5318,1181,1331,4072,3654,6288,5694,5273,833,973,1075,5690,6630,4944,1358,5198,1217,1263,4665,2637,4750,5370,4291,5310,2026,5277,6809,6135,1060,2882,2900,4953,4387,5631,2890,1839,1063,5518,1837,3024,4087,1988,4673,3649,1487,5583,1154,2411,2043,3951,1094,3134,1181,1229,5599,2395,4423,6769,3311,5016,5428,3312,4761,1213,6570,1718,2230,5686,3669,5498,3074,2274,742,4877,3292,3436,4464,886,2553,5523,5027,1314,1346,1100,550,3250,4761,5199,3953,1207,4607,1322,1373,1140,1423,1593,1775,2563,2557,1914,2132,6304,5071,4112,1699,1878,1002,6440,5094,4126,2537,1580,4546,6922,1607,2175,3079,981,4947,3115,6889,3114,4534,1503,2979,1547,5428,6163,2780,4956,2412,3949,5911,4384,2679,2445,3442,3247,2837,4129,5327,3258,3291,1311,658,2386,2564,4749,6721,6583,3476,2063,5466,5436,5314,5334,1188,4930,3511,1879,1140,5854,1637,1563,4829,6314,3858,5068,1498,6698,4016,4918,737,5760,5366,1281,3913,2618,4052,3093,3198,1674,2160,633,6504,4749,6562,1562,6488,5666,4253,3360,2174,5388,1986,917,5488,4863,5149,4674,3224,3040,5805,2563,5795,5629,6040,3787,4632,6681,3386,890,6134,4603,2808,6981,1957,4741,4433,3017,1424,663,3237,1696,5218,2907,5970,5273,4212,1649,6723,2224,6510,1954,2928,1068,4661,1674,792,5201,2758,4794,2995,4578,640,6419,5704,5348,5786,2991,4512,4241,3945,2288,2116,3436,1980,5729,6910,694,3982,1066,5714,6930,935,6607,618,4945,5595,3972,6255,6344,4569,1396,1915,1684,771,1195,4507,6608,2804,3169,6899,6647,4898,6924,5485,2688,4806,2087,2421,4921,3931,3175,4417,5379,4293,4087,4293,3827,1036,5177,6976,2804,6814,2752,6263,3455,3187,1915,1316,2508,5220,5589,5010,563,5981,6496,5511,777,2958,5078,5242,1958,2249,4875,3604,4554,2037,1651,5893,5485,6575,1201,1684,1144,3683,1756,6324,1144,787,4122,5521,2527,1663,2703,1866,3816,6392,4588,1160,3040,855,3758,3306,6985,5776,3657,6314,1394,3035,6528,6464,5138,4519,2731,6585,1311,5249,4702,5916,3089,5374,5929,2596,4090,6865,4071,2648,4527,2844,5418,3190,3700,5016,6823,2630,5946,5304,6703,707,2820,4807,2330,1997,5123,4560,4339,4793,809,2767,3434,2066,5148,6066,2330,5252,1395,5939,1401,4323,2880,5744,3775,3682,6201,2795,3421,6763,774,6825,1730,4836,4312,4888,2847,4532,5773,625,1045,6837,4734,2003,3123,1293,2245,2176,2656,1489,2762,1290,6247,1112,6546,3094,808,2725,5284,5666,4042,4961,6309,856,2474,800,1770,5181,5192,6206,4286,959,6498,5703,2358,4034,6902,5152,5954,3316,3559,4145,2249,5369,3775,4704,2500,1401,3591,2856,5623,5572,4845,1367,640,4139,2455,6607,6876,2363,5706,6325,4384,6246,6635,4070,5235,4249,668,3402,4701,3888,2920,6592,5892,6019,2921,4356,6172,6568,4845,1844,4750,968,3144,4835,6570,5771,3650,5419,3211,6817,6922,6117,3028,3456,2103,5599,6239,6440,4129,4393,1467,6349,3428,1837,6348,5457,6237,2352,4876,4818,1298,3147,2289,5159,2342,6326,5873,3035,3736,5016,5924,4463,4236,2619,3467,5140,6249,5186,621,4886,3350,3346,1260,5796,2611,2100,2727,2942,4053,4153,3073,3088,3850,4774,6681,5195,3100,5907,1373,893,1047,1565,2607,2461,575,4009,1120,1452,4603,6086,6833,4211,6980,4098,3850,2649,3295,3697,961,6271,920,3335,5873,3064,4488,5821,6261,6553,1740,2181,6337,4357).collect(Collectors.toList());
	private List<Integer> profits = Stream.of(572,635,97,641,446,77,202,387,671,676,118,680,671,345,562,108,301,642,557,673,463,34,596,655,479,533,523,281,462,128,497,31,201,41,77,579,490,229,666,33,313,273,538,559,139,348,317,456,500,531,200,479,462,122,92,354,673,245,414,164,529,186,359,493,625,672,388,105,113,187,590,185,572,178,652,251,145,183,435,337,252,584,414,389,643,207,533,530,272,402,62,47,376,548,655,99,403,334,18,242,122,558,225,375,124,425,191,461,486,526,321,67,168,641,115,580,381,698,64,315,83,674,13,545,574,610,68,286,189,562,308,639,135,192,110,104,610,410,389,110,599,439,252,364,287,62,175,95,137,175,298,44,633,662,349,348,243,631,265,86,549,279,177,289,76,101,660,670,407,51,172,254,577,20,39,126,458,515,457,321,387,214,524,140,484,136,264,442,549,66,652,546,346,311,318,221,361,362,574,559,455,271,570,378,252,658,615,390,440,415,153,218,335,169,593,144,166,127,167,311,224,648,307,137,635,687,313,86,188,292,421,191,426,501,163,91,215,230,303,360,69,191,563,30,651,514,347,409,173,327,675,387,370,170,347,441,479,283,263,692,36,621,641,560,78,190,241,479,104,508,83,461,351,548,504,634,625,240,492,146,31,524,355,341,635,431,436,603,566,408,136,175,622,29,348,126,686,502,355,335,51,481,39,59,370,76,575,574,509,113,465,368,682,458,563,323,308,580,67,102,129,280,584,565,51,285,374,298,463,443,211,308,20,689,125,83,267,146,348,244,667,645,46,519,195,302,388,661,298,689,218,494,470,382,492,470,133,98,700,128,32,397,619,472,141,264,328,688,118,601,455,270,141,305,343,93,417,166,275,412,183,210,436,193,579,689,514,247,413,84,636,617,575,190,420,25,303,226,121,133,302,75,423,335,490,493,451,33,57,230,376,462,291,576,506,679,377,234,82,432,548,302,72,194,116,204,314,374,326,614,367,662,450,671,176,477,209,474,490,56,186,164,471,593,248,549,476,14,426,277,642,10,329,303,328,542,232,552,335,34,131,508,337,115,245,429,142,520,177,643,195,538,140,208,72,408,482,387,304,455,457,479,449,663,154,500,173,92,429,321,326,467,542,252,467,297,591,585,187,433,412,383,611,192,229,92,659,456,341,451,386,457,385,508,371,696,161,83,85,53,289,319,262,537,443,543,654,682,142,105,491,74,373,376,605,345,281,473,522,369,250,113,414,191,40,531,177,315,485,258,518,282,482,496,315,23,238,303,196,146,577,307,623,280,541,284,568,531,270,159,556,665,236,473,313,585,541,125,605,694,365,621,416,116,148,291,527,580,555,230,379,72,87,104,478,352,141,352,111,47,597,397,652,491,412,573,617,693,10,608,433,694,374,341,563,167,354,632,407,594,520,414,180,470,67,442,466,514,625,688,541,411,651,410,21,93,606,344,593,154,391,445,32,434,260,44,348,143,95,151,111,140,39,448,204,382,490,354,380,317,95,348,599,613,196,154,400,452,298,152,665,66,83,108,125,439,406,45,653,513,519,53,604,655,690,603,552,364,132,285,102,31,658,218,214,240,332,457,27,591).collect(Collectors.toList());
	
	public Knapsack01_L8() {
		super();
		super.setWeights(Utils.convertToDouble(weights));
		super.setProfits(Utils.convertToDouble(profits));
		super.setCapacity(capacity);
		int var = this.weights.size();
		super.setNumVariables(var);
	}
}
